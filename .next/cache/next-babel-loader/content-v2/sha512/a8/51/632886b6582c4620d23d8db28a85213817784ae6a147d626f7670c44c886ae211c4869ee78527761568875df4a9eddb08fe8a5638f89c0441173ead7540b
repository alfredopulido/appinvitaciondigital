{"ast":null,"code":"// ./initAuth.js\nimport { init } from 'next-firebase-auth';\n\nconst initAuth = () => {\n  init({\n    authPageURL: '/auth/login',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/login',\n    // required\n    logoutAPIEndpoint: '/api/logout',\n    // required\n    onLoginRequestError: err => {\n      console.error(err);\n    },\n    onLogoutRequestError: err => {\n      console.error(err);\n    },\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: process.env.FIREBASE_PROJECT_ID,\n        clientEmail: 'firebase-adminsdk-v57n0@appinvitaciondigital.iam.gserviceaccount.com',\n        // The private key must not be accessible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY\n      }\n    },\n    // Use application default credentials (takes precedence over fireaseAdminInitConfig if set)\n    // useFirebaseAdminDefaultCredential: true,\n    firebaseClientInitConfig: {\n      apiKey: process.env.FIREBASE_APIKEY,\n      authDomain: process.env.FIREBASE_AUTHDOMAIN,\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      storageBucket: \"appinvitaciondigital.appspot.com\",\n      messagingSenderId: \"466777824847\",\n      appId: \"1:466777824847:web:4a38bcb434b199c1f6d43a\",\n      measurementId: \"G-7RYZ3BV0T1\"\n    },\n    cookies: {\n      name: 'ExampleApp',\n      // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [process.env.COOKIE_SECRET_CURRENT, process.env.COOKIE_SECRET_PREVIOUS],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000,\n      // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: true,\n      // set this to false in local (non-HTTPS) development\n      signed: true\n    },\n    onVerifyTokenError: err => {\n      console.error(err);\n    },\n    onTokenRefreshError: err => {\n      console.error(err);\n    }\n  });\n};\n\nexport default initAuth;","map":{"version":3,"sources":["/Users/jorgepulido/Documents/proyectos/web/appinvitaciondigital/appinvitaciondigital/initAuth.js"],"names":["init","initAuth","authPageURL","appPageURL","loginAPIEndpoint","logoutAPIEndpoint","onLoginRequestError","err","console","error","onLogoutRequestError","firebaseAdminInitConfig","credential","projectId","process","env","FIREBASE_PROJECT_ID","clientEmail","privateKey","FIREBASE_PRIVATE_KEY","firebaseClientInitConfig","apiKey","FIREBASE_APIKEY","authDomain","FIREBASE_AUTHDOMAIN","storageBucket","messagingSenderId","appId","measurementId","cookies","name","keys","COOKIE_SECRET_CURRENT","COOKIE_SECRET_PREVIOUS","httpOnly","maxAge","overwrite","path","sameSite","secure","signed","onVerifyTokenError","onTokenRefreshError"],"mappings":"AAAA;AACA,SAASA,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBD,EAAAA,IAAI,CAAC;AACHE,IAAAA,WAAW,EAAE,aADV;AAEHC,IAAAA,UAAU,EAAE,GAFT;AAGHC,IAAAA,gBAAgB,EAAE,YAHf;AAG6B;AAChCC,IAAAA,iBAAiB,EAAE,aAJhB;AAI+B;AAClCC,IAAAA,mBAAmB,EAAGC,GAAD,IAAS;AAC5BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAPE;AAQHG,IAAAA,oBAAoB,EAAGH,GAAD,IAAS;AAC7BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAVE;AAWHI,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBADb;AAEVC,QAAAA,WAAW,EAAE,sEAFH;AAGV;AACAC,QAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AAJd;AADW,KAXtB;AAmBH;AACA;AACAC,IAAAA,wBAAwB,EAAE;AACxBC,MAAAA,MAAM,EAAEP,OAAO,CAACC,GAAR,CAAYO,eADI;AAExBC,MAAAA,UAAU,EAAET,OAAO,CAACC,GAAR,CAAYS,mBAFA;AAGxBX,MAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBAHC;AAIxBS,MAAAA,aAAa,EAAE,kCAJS;AAKxBC,MAAAA,iBAAiB,EAAE,cALK;AAMxBC,MAAAA,KAAK,EAAE,2CANiB;AAOxBC,MAAAA,aAAa,EAAE;AAPS,KArBvB;AA8BHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,YADC;AACa;AACpB;AACA;AACAC,MAAAA,IAAI,EAAE,CACJjB,OAAO,CAACC,GAAR,CAAYiB,qBADR,EAEJlB,OAAO,CAACC,GAAR,CAAYkB,sBAFR,CAJC;AAQPC,MAAAA,QAAQ,EAAE,IARH;AASPC,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IATrB;AAS2B;AAClCC,MAAAA,SAAS,EAAE,IAVJ;AAWPC,MAAAA,IAAI,EAAE,GAXC;AAYPC,MAAAA,QAAQ,EAAE,QAZH;AAaPC,MAAAA,MAAM,EAAE,IAbD;AAaO;AACdC,MAAAA,MAAM,EAAE;AAdD,KA9BN;AA8CHC,IAAAA,kBAAkB,EAAGlC,GAAD,IAAS;AAC3BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAhDE;AAiDHmC,IAAAA,mBAAmB,EAAGnC,GAAD,IAAS;AAC5BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AAnDE,GAAD,CAAJ;AAqDD,CAtDD;;AAwDA,eAAeN,QAAf","sourcesContent":["// ./initAuth.js\nimport { init } from 'next-firebase-auth'\n\nconst initAuth = () => {\n  init({\n    authPageURL: '/auth/login',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/login', // required\n    logoutAPIEndpoint: '/api/logout', // required\n    onLoginRequestError: (err) => {\n      console.error(err)\n    },\n    onLogoutRequestError: (err) => {\n      console.error(err)\n    },\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: process.env.FIREBASE_PROJECT_ID,\n        clientEmail: 'firebase-adminsdk-v57n0@appinvitaciondigital.iam.gserviceaccount.com',\n        // The private key must not be accessible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY,\n      },\n    },\n    // Use application default credentials (takes precedence over fireaseAdminInitConfig if set)\n    // useFirebaseAdminDefaultCredential: true,\n    firebaseClientInitConfig: {\n      apiKey: process.env.FIREBASE_APIKEY,\n      authDomain: process.env.FIREBASE_AUTHDOMAIN,\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      storageBucket: \"appinvitaciondigital.appspot.com\",\n      messagingSenderId: \"466777824847\",\n      appId: \"1:466777824847:web:4a38bcb434b199c1f6d43a\",\n      measurementId: \"G-7RYZ3BV0T1\"\n    },\n    cookies: {\n      name: 'ExampleApp', // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [\n        process.env.COOKIE_SECRET_CURRENT,\n        process.env.COOKIE_SECRET_PREVIOUS,\n      ],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: true, // set this to false in local (non-HTTPS) development\n      signed: true,\n    },\n    onVerifyTokenError: (err) => {\n      console.error(err)\n    },\n    onTokenRefreshError: (err) => {\n      console.error(err)\n    },\n  })\n}\n\nexport default initAuth"]},"metadata":{},"sourceType":"module"}