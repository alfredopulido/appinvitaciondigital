{"ast":null,"code":"import { init } from 'next-firebase-auth';\n\nconst initAuth = () => {\n  init({\n    authPageURL: '/auth',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/login',\n    // required\n    logoutAPIEndpoint: '/api/logout',\n    // required\n    onLoginRequestError: err => {\n      console.error(err);\n    },\n    onLogoutRequestError: err => {\n      console.error(err);\n    },\n    firebaseAuthEmulatorHost: 'localhost:9099',\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: 'appinvitaciondigital',\n        clientEmail: 'firebase-adminsdk-v57n0@appinvitaciondigital.iam.gserviceaccount.com',\n        // The private key must not be accessible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY\n      },\n      databaseURL: 'https://my-example-app.firebaseio.com'\n    },\n    // Use application default credentials (takes precedence over fireaseAdminInitConfig if set)\n    // useFirebaseAdminDefaultCredential: true,\n    firebaseClientInitConfig: {\n      apiKey: 'AIzaSyC_7PJBr95OSyXMpiF846d1BwLvZTxvrbA',\n      // required\n      authDomain: 'appinvitaciondigital.firebaseapp.com',\n      databaseURL: 'https://my-example-app.firebaseio.com',\n      projectId: 'appinvitaciondigital'\n    },\n    cookies: {\n      name: 'Appinvitaciondigital',\n      // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [process.env.COOKIE_SECRET_CURRENT, process.env.COOKIE_SECRET_PREVIOUS],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000,\n      // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: true,\n      // set this to false in local (non-HTTPS) development\n      signed: true\n    },\n    onVerifyTokenError: err => {\n      console.error(err);\n    },\n    onTokenRefreshError: err => {\n      console.error(err);\n    }\n  });\n};\n\nexport default initAuth;","map":{"version":3,"sources":["/Users/jorgepulido/Documents/proyectos/web/appinvitaciondigital/appinvitaciondigital/initAuth.js"],"names":["init","initAuth","authPageURL","appPageURL","loginAPIEndpoint","logoutAPIEndpoint","onLoginRequestError","err","console","error","onLogoutRequestError","firebaseAuthEmulatorHost","firebaseAdminInitConfig","credential","projectId","clientEmail","privateKey","process","env","FIREBASE_PRIVATE_KEY","databaseURL","firebaseClientInitConfig","apiKey","authDomain","cookies","name","keys","COOKIE_SECRET_CURRENT","COOKIE_SECRET_PREVIOUS","httpOnly","maxAge","overwrite","path","sameSite","secure","signed","onVerifyTokenError","onTokenRefreshError"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBD,EAAAA,IAAI,CAAC;AACHE,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,UAAU,EAAE,GAFT;AAGHC,IAAAA,gBAAgB,EAAE,YAHf;AAG6B;AAChCC,IAAAA,iBAAiB,EAAE,aAJhB;AAI+B;AAClCC,IAAAA,mBAAmB,EAAGC,GAAD,IAAS;AAC5BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAPE;AAQHG,IAAAA,oBAAoB,EAAGH,GAAD,IAAS;AAC7BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAVE;AAWHI,IAAAA,wBAAwB,EAAE,gBAXvB;AAYHC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,sBADD;AAEVC,QAAAA,WAAW,EAAE,sEAFH;AAGV;AACAC,QAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAJd,OADW;AAOvBC,MAAAA,WAAW,EAAE;AAPU,KAZtB;AAqBH;AACA;AACAC,IAAAA,wBAAwB,EAAE;AACxBC,MAAAA,MAAM,EAAE,yCADgB;AAC2B;AACnDC,MAAAA,UAAU,EAAE,sCAFY;AAGxBH,MAAAA,WAAW,EAAE,uCAHW;AAIxBN,MAAAA,SAAS,EAAE;AAJa,KAvBvB;AA6BHU,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,sBADC;AACuB;AAC9B;AACA;AACAC,MAAAA,IAAI,EAAE,CACJT,OAAO,CAACC,GAAR,CAAYS,qBADR,EAEJV,OAAO,CAACC,GAAR,CAAYU,sBAFR,CAJC;AAQPC,MAAAA,QAAQ,EAAE,IARH;AASPC,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IATrB;AAS2B;AAClCC,MAAAA,SAAS,EAAE,IAVJ;AAWPC,MAAAA,IAAI,EAAE,GAXC;AAYPC,MAAAA,QAAQ,EAAE,QAZH;AAaPC,MAAAA,MAAM,EAAE,IAbD;AAaO;AACdC,MAAAA,MAAM,EAAE;AAdD,KA7BN;AA6CHC,IAAAA,kBAAkB,EAAG7B,GAAD,IAAS;AAC3BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KA/CE;AAgDH8B,IAAAA,mBAAmB,EAAG9B,GAAD,IAAS;AAC5BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AAlDE,GAAD,CAAJ;AAoDD,CArDD;;AAuDA,eAAeN,QAAf","sourcesContent":["import { init } from 'next-firebase-auth'\n\nconst initAuth = () => {\n  init({\n    authPageURL: '/auth',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/login', // required\n    logoutAPIEndpoint: '/api/logout', // required\n    onLoginRequestError: (err) => {\n      console.error(err)\n    },\n    onLogoutRequestError: (err) => {\n      console.error(err)\n    },\n    firebaseAuthEmulatorHost: 'localhost:9099',\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: 'appinvitaciondigital',\n        clientEmail: 'firebase-adminsdk-v57n0@appinvitaciondigital.iam.gserviceaccount.com',\n        // The private key must not be accessible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY,\n      },\n      databaseURL: 'https://my-example-app.firebaseio.com',\n    },\n    // Use application default credentials (takes precedence over fireaseAdminInitConfig if set)\n    // useFirebaseAdminDefaultCredential: true,\n    firebaseClientInitConfig: {\n      apiKey: 'AIzaSyC_7PJBr95OSyXMpiF846d1BwLvZTxvrbA', // required\n      authDomain: 'appinvitaciondigital.firebaseapp.com',\n      databaseURL: 'https://my-example-app.firebaseio.com',\n      projectId: 'appinvitaciondigital',\n    },\n    cookies: {\n      name: 'Appinvitaciondigital', // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [\n        process.env.COOKIE_SECRET_CURRENT,\n        process.env.COOKIE_SECRET_PREVIOUS,\n      ],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: true, // set this to false in local (non-HTTPS) development\n      signed: true,\n    },\n    onVerifyTokenError: (err) => {\n      console.error(err)\n    },\n    onTokenRefreshError: (err) => {\n      console.error(err)\n    },\n  })\n}\n\nexport default initAuth"]},"metadata":{},"sourceType":"module"}